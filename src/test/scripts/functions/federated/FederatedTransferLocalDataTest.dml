#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

/*
if ($rP) {
  A = federated(addresses=list($in_X1, $in_X2, $in_X3, $in_X4),
    ranges=list(list(0, 0), list($rows/4, $cols), list($rows/4, 0), list(2*$rows/4, $cols),
    list(2*$rows/4, 0), list(3*$rows/4, $cols), list(3*$rows/4, 0), list($rows, $cols)));
} else {
  A = federated(addresses=list($in_X1, $in_X2, $in_X3, $in_X4), ftype = "ROW",
    ranges=list(list(0, 0), list($rows, $cols/4), list(0,$cols/4), list($rows, $cols/2),
    list(0,$cols/2), list($rows, 3*($cols/4)), list(0, 3*($cols/4)), list($rows, $cols)));
}
*/

A1 = matrix(0, rows=3, cols=4);
m = list(matrix(0, rows=3, cols=4), matrix(0, rows=3, cols=4), matrix(0, rows=3, cols=4), matrix(0, rows=3, cols=4));
#print(toString(m)) string object
A = federated(objects = m,
    addresses=list($in_X1, $in_X2, $in_X3, $in_X4),
    ftype="ROW", type="MATRIX");
write(A, $out_S);
